% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create_distribution.R
\name{cleanse_duplicates}
\alias{cleanse_duplicates}
\title{Function to remove duplicated perimeters}
\usage{
cleanse_duplicates(candidates)
}
\arguments{
\item{candidates}{An `sf` object (simple features) containing fire perimeters.}
}
\value{
An `sf` object with all geometrically duplicated perimeters removed.
}
\description{
This function iteratively checks for and removes duplicated geometries from an
`sf` object containing fire perimeters. Duplicates are identified using
`sf::st_equals()`. The process repeats until no more geometrically identical
polygons are found.
}
\examples{
\dontrun{
# Create a dummy sf object with some duplicated geometries for demonstration
library(sf)
library(dplyr)
polygon1 <- st_polygon(list(cbind(c(0,0,1,1,0), c(0,1,1,0,0))))
polygon2 <- st_polygon(list(cbind(c(1,1,2,2,1), c(1,2,2,1,1))))
# Duplicate of polygon1
polygon1_dup <- st_polygon(list(cbind(c(0,0,1,1,0), c(0,1,1,0,0))))

dummy_perimeters <- st_sf(
  id = 1:4,
  geometry = st_sfc(polygon1, polygon2, polygon1_dup, st_polygon(list(cbind(c(3,3,4,4,3), c(3,4,4,3,3))))),
  crs = 25830
)

print("Original perimeters with potential duplicates:")
print(dummy_perimeters)

cleaned_perimeters <- cleanse_duplicates(candidates = dummy_perimeters)

print("Perimeters after cleansing duplicates:")
print(cleaned_perimeters)
}
}
