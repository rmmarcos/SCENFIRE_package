% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/backup_select_events.R, R/create_distribution.R
\name{cleanse_duplicates}
\alias{cleanse_duplicates}
\title{Function to remove duplicated perimeters}
\usage{
cleanse_duplicates(candidates)

cleanse_duplicates(candidates)
}
\arguments{
\item{candidates}{An \code{sf} object containing candidate polygons.}
}
\value{
An `sf` object with all geometrically duplicated perimeters removed.

An \code{sf} object with duplicate polygons removed.
The function also prints messages to the console indicating whether
duplicates were found and their indices.
}
\description{
This function iteratively checks for and removes duplicated geometries from an
`sf` object containing fire perimeters. Duplicates are identified using
`sf::st_equals()`. The process repeats until no more geometrically identical
polygons are found.

This function checks a set of candidate polygons and removes duplicates
based on spatial equality. It iteratively removes duplicated polygons
until none remain.
}
\details{
Duplicates are detected using \code{sf::st_equals()}, which checks
for geometric equality between polygons.
The function continues removing duplicates until no further matches are found.
}
\examples{
\dontrun{
# Create a dummy sf object with some duplicated geometries for demonstration
library(sf)
library(dplyr)
polygon1 <- st_polygon(list(cbind(c(0,0,1,1,0), c(0,1,1,0,0))))
polygon2 <- st_polygon(list(cbind(c(1,1,2,2,1), c(1,2,2,1,1))))
# Duplicate of polygon1
polygon1_dup <- st_polygon(list(cbind(c(0,0,1,1,0), c(0,1,1,0,0))))

dummy_perimeters <- st_sf(
  id = 1:4,
  geometry = st_sfc(polygon1, polygon2, polygon1_dup, st_polygon(list(cbind(c(3,3,4,4,3), c(3,4,4,3,3))))),
  crs = 25830
)

print("Original perimeters with potential duplicates:")
print(dummy_perimeters)

cleaned_perimeters <- cleanse_duplicates(candidates = dummy_perimeters)

print("Perimeters after cleansing duplicates:")
print(cleaned_perimeters)
}
\dontrun{
library(sf)

# Create a simple sf object with duplicate polygons
poly1 <- st_polygon(list(rbind(c(0,0), c(1,0), c(1,1), c(0,1), c(0,0))))
poly2 <- st_polygon(list(rbind(c(0,0), c(1,0), c(1,1), c(0,1), c(0,0)))) # duplicate
poly3 <- st_polygon(list(rbind(c(2,2), c(3,2), c(3,3), c(2,3), c(2,2))))

candidates <- st_sf(geometry = st_sfc(poly1, poly2, poly3))

cleansed <- cleanse_duplicates(candidates)
}

}
\seealso{
\code{\link[sf]{st_equals}}
}
