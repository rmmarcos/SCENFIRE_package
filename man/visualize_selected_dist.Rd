% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/backup_select_events.R, R/create_distribution.R
\name{visualize_selected_dist}
\alias{visualize_selected_dist}
\title{Visualize selected fire perimeter distribution}
\usage{
visualize_selected_dist(
  result = result,
  logaritmic = TRUE,
  target_hist = target_hist,
  bins = bins
)

visualize_selected_dist(
  result = result,
  logaritmic = TRUE,
  target_hist = target_hist,
  bins = bins
)
}
\arguments{
\item{result}{Lista devuelta por un modelo o proceso de selección
que debe contener al menos:
\describe{
  \item{selected_surfaces}{Vector numérico con los tamaños de superficie seleccionados.}
  \item{total_surface}{Valor numérico con la superficie total seleccionada.}
  \item{final_discrepancy}{Valor numérico con la discrepancia final respecto a la distribución objetivo.}
}}

\item{logaritmic}{Lógico. Si \code{TRUE}, los tamaños seleccionados se transforman logarítmicamente
antes de graficar. Por defecto \code{TRUE}.}

\item{target_hist}{Vector numérico con las densidades de la distribución objetivo,
correspondiente a los puntos medios de los intervalos definidos en \code{bins}.}

\item{bins}{Vector numérico con los límites de los intervalos (breaks) usados
para construir el histograma.}
}
\value{
This function does not return a value. It produces a plot as a side effect
  and prints information to the console.

Un objeto \code{ggplot} que representa la comparación entre la distribución
seleccionada y la distribución objetivo. Además, la función imprime en consola:
\itemize{
  \item Número de eventos seleccionados.
  \item Superficie total seleccionada.
  \item Discrepancia respecto a la distribución objetivo.
}
Si no se encuentra una solución, devuelve un mensaje y no genera gráfico.
}
\description{
This function generates a histogram comparing the distribution of selected
fire surfaces (e.g., areas) with a predefined target distribution. It also
prints key statistics about the selection, such as the number of events,
total surface area, and the discrepancy with the target. The visualization
automatically adapts to whether a logarithmic transformation was used.

Esta función genera un gráfico comparando la distribución de los
tamaños de incendio seleccionados con una distribución objetivo.
Permite aplicar transformación logarítmica a los tamaños seleccionados
y visualizar ambas distribuciones de manera conjunta.
}
\examples{
\dontrun{
# This example requires the 'foreach' package and a parallel backend (e.g., 'doParallel')
# to be set up.
# library(doParallel)

# Dummy data for demonstration (replace with your actual data)
set.seed(123)
historical_data_for_target <- floor(fit_powerlaw(n = 500, alpha = 2, xmin = 10, xmax = 10000))
event_surfaces <- fit_powerlaw(n = 10000, alpha = 2, xmin = 10, xmax = 10000)
# Discard simulated fires that are too large (below 110\% max historical size)
event_surfaces <- event_surfaces[event_surfaces<max(historical_data_for_target)*1.1]
event_probabilities <- rnorm(length(event_surfaces))
event_probabilities <- (event_probabilities-min(event_probabilities))/(max(event_probabilities)-min(event_probabilities))

y <- 100 #number of years spanning historical fire data
check_fire_data(fires_hist_size = historical_data_for_target,
                sim_perimeters_size = event_surfaces,
                n_years = y)

reference_surface_example <- sum(historical_data_for_target)/y
surface_threshold_example <- check_fire_data(fires_hist_size = historical_data_for_target,
                                             sim_perimeters_size = event_surfaces,
                                             n_years = 10)
tolerance_example <- 0.1

# Create a dummy target histogram (assuming 'event_surfaces' from historical data)
# For a real scenario, 'event_surfaces' here would be your historical fire sizes.

target_info_example <- build_target_hist(num_bins = 10, logaritmic = TRUE,
                                         sizes = historical_data_for_target,
                                         event_surfaces = event_surfaces)
target_hist <- target_info_example$target_hist
bins <- target_info_example$bins

# Run the selection process
selected_events_result <- select_events(
  event_sizes = event_surfaces,
  event_probabilities = event_probabilities,
  target_hist = target_hist,
  bins = bins,
  reference_surface = reference_surface_example,
  surface_threshold = surface_threshold_example,
  tolerance = tolerance_example,
  max_it = 2 # Reduced iterations for example
)

visualize_selected_dist(result = selected_events_result,
  logaritmic = T,
  target_hist = target_hist,
  bins = bins)

# Stop the parallel cluster when done
# stopImplicitCluster()

visualize_selected_dist(result = selected_events_result)
}
\dontrun{
# Use example for select_events
visualize_selected_dist(result, logaritmic = TRUE,
                        target_hist = target_hist, bins = bins)
}

}
