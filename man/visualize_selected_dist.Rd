% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create_distribution.R
\name{visualize_selected_dist}
\alias{visualize_selected_dist}
\title{Visualize Selected Fire Perimeter Distribution}
\usage{
visualize_selected_dist(
  result = result,
  logaritmic = T,
  target_hist = target_hist,
  bins = bins
)
}
\arguments{
\item{result}{A list object, typically the output from the `select_events` function.
It is expected to contain at least the following elements:
\describe{
  \item{selected_surfaces}{Numeric vector of surface values for the selected events.}
  \item{total_surface}{Numeric value representing the sum of surface areas of the selected events.}
  \item{final_discrepancy}{Numeric value representing the final discrepancy metric for the selection.}
}}

\item{logaritmic}{Logical (assumed to be available in the calling environment).
If `TRUE`, it indicates that a logarithmic transformation was applied to the
fire sizes during the selection process and should be used for visualization.
If `FALSE`, the original scale is used.}

\item{target_hist}{Numeric vector (assumed to be available in the calling environment).
The density values of the target histogram, typically obtained from `build_target_hist`.}

\item{bins}{Numeric vector (assumed to be available in the calling environment).
The breakpoints for the histogram bins. This should be consistent with the
`bins` output from `build_target_hist`.}
}
\value{
This function does not return a value. It produces a plot as a side effect
  and prints information to the console.
}
\description{
This function generates a histogram comparing the distribution of selected
fire surfaces (e.g., areas) with a predefined target distribution. It also
prints key statistics about the selection, such as the number of events,
total surface area, and the discrepancy with the target. The visualization
automatically adapts to whether a logarithmic transformation was used.
}
\examples{
\dontrun{
# Create a dummy result for direct example of visualize_selected_dist
selected_idx <- sample(1:length(event_surfaces_ex), 30) # Randomly select some indices
dummy_selected_surfaces <- event_surfaces_ex[selected_idx]
dummy_total_surface <- sum(dummy_selected_surfaces)
dummy_final_discrepancy <- calculate_discrepancy(dummy_selected_surfaces, target_hist, bins, l)

result_dummy <- list(
  selected_surfaces = dummy_selected_surfaces,
  total_surface = dummy_total_surface,
  final_discrepancy = dummy_final_discrepancy
)
# --- End of dummy 'result' creation ---

#Visualize the results
visualize_selected_dist(result = result_dummy)
}
}
